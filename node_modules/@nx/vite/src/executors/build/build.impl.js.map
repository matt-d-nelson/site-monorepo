{"version":3,"sources":["../../../../../../packages/vite/src/executors/build/build.impl.ts"],"sourcesContent":["import {\n  detectPackageManager,\n  ExecutorContext,\n  joinPathFragments,\n  logger,\n  offsetFromRoot,\n  stripIndents,\n  writeJsonFile,\n} from '@nx/devkit';\nimport {\n  getProjectTsConfigPath,\n  normalizeViteConfigFilePath,\n} from '../../utils/options-utils';\nimport { ViteBuildExecutorOptions } from './schema';\nimport {\n  copyAssets,\n  createLockFile,\n  createPackageJson,\n  getLockFileName,\n} from '@nx/js';\nimport { existsSync, writeFileSync } from 'fs';\nimport { relative, resolve } from 'path';\nimport { createAsyncIterable } from '@nx/devkit/src/utils/async-iterable';\nimport {\n  createBuildableTsConfig,\n  loadViteDynamicImport,\n  validateTypes,\n} from '../../utils/executor-utils';\nimport { type Plugin } from 'vite';\n\nexport async function* viteBuildExecutor(\n  options: Record<string, any> & ViteBuildExecutorOptions,\n  context: ExecutorContext\n) {\n  process.env.VITE_CJS_IGNORE_WARNING = 'true';\n  // Allows ESM to be required in CJS modules. Vite will be published as ESM in the future.\n  const { mergeConfig, build, resolveConfig } = await loadViteDynamicImport();\n  const projectRoot =\n    context.projectsConfigurations.projects[context.projectName].root;\n  const tsConfigForBuild = createBuildableTsConfig(\n    projectRoot,\n    options,\n    context\n  );\n\n  const viteConfigPath = normalizeViteConfigFilePath(\n    context.root,\n    projectRoot,\n    options.configFile\n  );\n  const root =\n    projectRoot === '.'\n      ? process.cwd()\n      : relative(context.cwd, joinPathFragments(context.root, projectRoot));\n\n  const { buildOptions, otherOptions } = await getBuildExtraArgs(options);\n\n  const resolved = await resolveConfig(\n    {\n      configFile: viteConfigPath,\n      mode: otherOptions?.mode ?? 'production',\n    },\n    'build',\n    otherOptions?.mode ?? 'production'\n  );\n\n  const outDir =\n    joinPathFragments(offsetFromRoot(projectRoot), options.outputPath) ??\n    resolved?.build?.outDir;\n\n  const buildConfig = mergeConfig(\n    {\n      // This should not be needed as it's going to be set in vite.config.ts\n      // but leaving it here in case someone did not migrate correctly\n      root: resolved.root ?? root,\n      configFile: viteConfigPath,\n    },\n    {\n      build: {\n        outDir,\n        ...buildOptions,\n      },\n      ...otherOptions,\n    }\n  );\n\n  if (!options.skipTypeCheck) {\n    await validateTypes({\n      workspaceRoot: context.root,\n      tsconfig: tsConfigForBuild,\n      isVueProject: Boolean(\n        resolved.plugins?.find(\n          (plugin: Plugin) =>\n            typeof plugin === 'object' && plugin?.name === 'vite:vue'\n        )\n      ),\n    });\n  }\n\n  const watcherOrOutput = await build(buildConfig);\n\n  const libraryPackageJson = resolve(projectRoot, 'package.json');\n  const rootPackageJson = resolve(context.root, 'package.json');\n\n  // Here, we want the outdir relative to the workspace root.\n  // So, we calculate the relative path from the workspace root to the outdir.\n  const outDirRelativeToWorkspaceRoot = outDir.replaceAll('../', '');\n  const distPackageJson = resolve(\n    outDirRelativeToWorkspaceRoot,\n    'package.json'\n  );\n\n  // Generate a package.json if option has been set.\n  if (options.generatePackageJson) {\n    if (context.projectGraph.nodes[context.projectName].type !== 'app') {\n      logger.warn(\n        stripIndents`The project ${context.projectName} is using the 'generatePackageJson' option which is deprecated for library projects. It should only be used for applications.\n        For libraries, configure the project to use the '@nx/dependency-checks' ESLint rule instead (https://nx.dev/nx-api/eslint-plugin/documents/dependency-checks).`\n      );\n    }\n\n    const builtPackageJson = createPackageJson(\n      context.projectName,\n      context.projectGraph,\n      {\n        target: context.targetName,\n        root: context.root,\n        isProduction: !options.includeDevDependenciesInPackageJson, // By default we remove devDependencies since this is a production build.\n        skipOverrides: options.skipOverrides,\n        skipPackageManager: options.skipPackageManager,\n      }\n    );\n\n    builtPackageJson.type ??= 'module';\n\n    writeJsonFile(\n      `${outDirRelativeToWorkspaceRoot}/package.json`,\n      builtPackageJson\n    );\n    const packageManager = detectPackageManager(context.root);\n\n    const lockFile = createLockFile(\n      builtPackageJson,\n      context.projectGraph,\n      packageManager\n    );\n    writeFileSync(\n      `${outDirRelativeToWorkspaceRoot}/${getLockFileName(packageManager)}`,\n      lockFile,\n      {\n        encoding: 'utf-8',\n      }\n    );\n  }\n  // For buildable libs, copy package.json if it exists.\n  else if (\n    options.generatePackageJson !== false &&\n    !existsSync(distPackageJson) &&\n    existsSync(libraryPackageJson) &&\n    rootPackageJson !== libraryPackageJson\n  ) {\n    await copyAssets(\n      {\n        outputPath: outDirRelativeToWorkspaceRoot,\n        assets: [\n          {\n            input: projectRoot,\n            output: '.',\n            glob: 'package.json',\n          },\n        ],\n      },\n      context\n    );\n  }\n\n  if ('on' in watcherOrOutput) {\n    const iterable = createAsyncIterable<{ success: boolean }>(({ next }) => {\n      let success = true;\n      watcherOrOutput.on('event', (event) => {\n        if (event.code === 'START') {\n          success = true;\n        } else if (event.code === 'ERROR') {\n          success = false;\n        } else if (event.code === 'END') {\n          next({ success });\n        }\n        // result must be closed when present.\n        // see https://rollupjs.org/guide/en/#rollupwatch\n        if ('result' in event && event.result) {\n          event.result.close();\n        }\n      });\n    });\n    yield* iterable;\n  } else {\n    const output = watcherOrOutput?.['output'] || watcherOrOutput?.[0]?.output;\n    const fileName = output?.[0]?.fileName || 'main.cjs';\n    const outfile = resolve(outDirRelativeToWorkspaceRoot, fileName);\n    yield { success: true, outfile };\n  }\n}\n\nexport async function getBuildExtraArgs(\n  options: ViteBuildExecutorOptions\n): Promise<{\n  // vite BuildOptions\n  buildOptions: Record<string, unknown>;\n  otherOptions: Record<string, any>;\n}> {\n  // support passing extra args to vite cli\n  const schema = await import('./schema.json');\n  const extraArgs = {};\n  for (const key of Object.keys(options)) {\n    if (!schema.properties[key]) {\n      extraArgs[key] = options[key];\n    }\n  }\n\n  const buildOptions = {};\n  const buildSchemaKeys = [\n    'target',\n    'polyfillModulePreload',\n    'modulePreload',\n    'outDir',\n    'assetsDir',\n    'assetsInlineLimit',\n    'cssCodeSplit',\n    'cssTarget',\n    'cssMinify',\n    'sourcemap',\n    'minify',\n    'terserOptions',\n    'rollupOptions',\n    'commonjsOptions',\n    'dynamicImportVarsOptions',\n    'write',\n    'emptyOutDir',\n    'copyPublicDir',\n    'manifest',\n    'lib',\n    'ssr',\n    'ssrManifest',\n    'ssrEmitAssets',\n    'reportCompressedSize',\n    'chunkSizeWarningLimit',\n    'watch',\n  ];\n  const otherOptions = {};\n  for (const key of Object.keys(extraArgs)) {\n    if (buildSchemaKeys.includes(key)) {\n      buildOptions[key] = extraArgs[key];\n    } else {\n      otherOptions[key] = extraArgs[key];\n    }\n  }\n\n  buildOptions['watch'] = options.watch ?? undefined;\n\n  return {\n    buildOptions,\n    otherOptions,\n  };\n}\n\nexport default viteBuildExecutor;\n"],"names":["getBuildExtraArgs","viteBuildExecutor","options","context","resolved","process","env","VITE_CJS_IGNORE_WARNING","mergeConfig","build","resolveConfig","loadViteDynamicImport","projectRoot","projectsConfigurations","projects","projectName","root","tsConfigForBuild","createBuildableTsConfig","viteConfigPath","normalizeViteConfigFilePath","configFile","cwd","relative","joinPathFragments","buildOptions","otherOptions","mode","outDir","offsetFromRoot","outputPath","buildConfig","skipTypeCheck","validateTypes","workspaceRoot","tsconfig","isVueProject","Boolean","plugins","find","plugin","name","watcherOrOutput","libraryPackageJson","resolve","rootPackageJson","outDirRelativeToWorkspaceRoot","replaceAll","distPackageJson","generatePackageJson","builtPackageJson","projectGraph","nodes","type","logger","warn","stripIndents","createPackageJson","target","targetName","isProduction","includeDevDependenciesInPackageJson","skipOverrides","skipPackageManager","writeJsonFile","packageManager","detectPackageManager","lockFile","createLockFile","writeFileSync","getLockFileName","encoding","existsSync","copyAssets","assets","input","output","glob","iterable","createAsyncIterable","next","success","on","event","code","result","close","fileName","outfile","schema","extraArgs","key","Object","keys","properties","buildSchemaKeys","includes","watch","undefined"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}